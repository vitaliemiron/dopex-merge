name: Auto-resolve yarn.lock conflict

on:
  pull_request:
    types: [opened, synchronize, reopened]

  workflow_dispatch:
    inputs:
      base:
        description: 'Base branch (e.g. main)'
        required: true
        default: 'main'
      head:
        description: 'Head branch (e.g. feature-x)'
        required: true

jobs:
  fix-yarn-lock:
    runs-on: ubuntu-latest

    steps:
      - name: Set dynamic branch names
        id: vars
        run: |
          echo "HEAD_BRANCH=${{ github.event.inputs.head || github.head_ref }}" >> $GITHUB_OUTPUT
          echo "BASE_BRANCH=${{ github.event.inputs.base || github.base_ref }}" >> $GITHUB_OUTPUT

      - name: Checkout head branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.vars.outputs.HEAD_BRANCH }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Node.js and yarn-deduplicate
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install -g yarn-deduplicate

      - name: Add base branch as remote and fetch
        run: |
          git remote add upstream https://github.com/${{ github.repository }}.git
          git fetch upstream ${{ steps.vars.outputs.BASE_BRANCH }}

      - name: Attempt merge with base branch
        run: |
          git merge upstream/${{ steps.vars.outputs.BASE_BRANCH }} --no-commit || echo "::warning ::Merge conflict expected"

      - name: Check for yarn.lock conflict
        id: conflict
        run: |
          if git ls-files -u | grep -q 'yarn.lock'; then
            echo "conflicted=true" >> $GITHUB_OUTPUT
          else
            echo "conflicted=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no yarn.lock conflict
        if: steps.conflict.outputs.conflicted == 'false'
        run: echo "No conflict detected. Skipping auto-resolution."

      - name: Auto-resolve yarn.lock conflict and install
        if: steps.conflict.outputs.conflicted == 'true'
        run: |
          echo "Resolving yarn.lock conflict..."
          git checkout --theirs yarn.lock || git checkout --ours yarn.lock
          yarn-deduplicate
          yarn install
          git add yarn.lock
          git commit -m "fix: auto-resolved yarn.lock conflict"

      - name: Push resolved yarn.lock
        if: steps.conflict.outputs.conflicted == 'true'
        run: |
          git push origin HEAD:${{ steps.vars.outputs.HEAD_BRANCH }}
